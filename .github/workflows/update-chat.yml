name: Update Chat Display

on:
  # Trigger when comments are added to issues
  issue_comment:
    types: [created, edited]
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to render (optional)'
        required: false
        type: string

jobs:
  update_chat:
    runs-on: ubuntu-latest
    # Only run for Issue #2 or manual dispatch
    if: (github.event_name == 'issue_comment' && github.event.issue.number == 2) || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install requests python-dateutil rich>=13.0.0 wcwidth>=0.2.9

      - name: Cache GitHub API responses
        uses: actions/cache@v3
        with:
          path: ~/.cache/github-api
          key: github-api-${{ github.event.issue.number }}-${{ github.sha }}
          restore-keys: |
            github-api-${{ github.event.issue.number }}-

      - name: Update README with chat
        env:
          # GITHUB_TOKEN has repository write permissions to commit chat updates
          # Scope: Contents (write), Metadata (read), Pull requests (write)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          ISSUE_NUMBER: '2'
        run: python .github/scripts/render_chat.py

      - name: Commit and push if changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ðŸ’¬ Update chat display from issue comments"
          file_pattern: README.md